# Testing utilities.
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

# All other packages in MiniMIP may use any of the testing utils.
package(default_visibility = ["//visibility:public"])

# Tests the implementation of all LP interfaces.
cc_test(
    name = "lpi_test",
    size = "small",
    srcs = ["lpi_test.cc"],
    linkstatic = True,
    deps = [
        "//src/lp_interface:lpi",
        "//src/lp_interface:lpi_factory",
        "//src/data_structures:strong_sparse_vector",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

# TODO(cgraczy, lpawel): Refactor the tests below.

#cc_test(
#    name = "bound_changes_test",
#    size = "small",
#    srcs = ["bound_changes.cc"],
#    deps = [
#        ":utils",
#        "//src/lp_interface:lpi_factory",
#        "@com_google_absl//absl/status",
#        "@com_google_googletest//:gtest_main",
#    ],
#)

#cc_test(
#    name = "solve_test",
#    size = "small",
#    srcs = ["solve.cc"],
#    deps = [
#        ":utils",
#        "//src/lp_interface:lpi_factory",
#        "@com_google_absl//absl/status",
#        "@com_google_googletest//:gtest_main",
#    ],
#)

#cc_test(
#    name = "change_test",
#    size = "small",
#    srcs = ["change.cc"],
#    deps = [
#        ":utils",
#        "//src/lp_interface:lpi_factory",
#        "@com_google_absl//absl/status",
#        "@com_google_googletest//:gtest_main",
#    ],
#)
