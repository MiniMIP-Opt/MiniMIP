# Testing utilities.
load("@rules_cc//cc:defs.bzl", "cc_library")

# All other packages in MiniMIP may use any of the testing utils.
package(default_visibility = ["//visibility:public"])

cc_library(
    name = "utils",
    srcs = ["utils.cc"],
    hdrs = ["utils.h"],
    deps = [
        "//src/data_structures:strong_sparse_vector",
        "//src/lp_interface:lpi",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@com_google_ortools//ortools/base:status_macros",
    ],
)

cc_library(
    name = "gtest_main",
    srcs = ["gtest_main.cc"],
    deps = [
        "//src/data_structures:strong_sparse_vector",
        "@com_google_googletest//:gtest",
        "@com_google_ortools//ortools/base",
    ],
    alwayslink = True,
)

cc_test(
    name = "solve_loop_test",
    srcs = ["solve_loop_test.cc"],
#    copts = [
#        "-fsanitize=address",
#        "-fno-omit-frame-pointer",
#    ],
#    linkopts = ["-fsanitize=address"],
    deps = [
        "//src:solver",
        "//unit_tests:gtest_main",
        "//unit_tests:utils",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
    ],
)

cc_test(
    name = "solver_test",
    srcs = ["solver_test.cc"],
#    copts = [
#        "-fsanitize=address",
#        "-fno-omit-frame-pointer",
#    ],
#    linkopts = ["-fsanitize=address"],
    deps = [
        "//src:solver",
        "//unit_tests:gtest_main",
        "//unit_tests:utils",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
    ],
)
