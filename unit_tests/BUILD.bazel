# Testing utilities.
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

# All other packages in MiniMIP may use any of the testing utils.
package(default_visibility = ["//visibility:public"])

cc_library(
    name = "utils",
    hdrs = ["utils.h"],
    deps = [
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "bases_test",
    size = "small",
    srcs = ["bases.cc"],
    deps = [
        ":utils",
        "//src/lp_interface:lp_types",
        "//src/lp_interface:lpi_factory",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "matrix_test",
    size = "small",
    srcs = ["matrix.cc"],
    deps = [
        ":utils",
        "//src/lp_interface:lp_types",
        "//src/lp_interface:lpi_factory",
        "//src/minimip:sparse_types",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "bound_changes_test",
    size = "small",
    srcs = ["bound_changes.cc"],
    deps = [
        ":utils",
        "//src/lp_interface:lpi_factory",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "solve_test",
    size = "small",
    srcs = ["solve.cc"],
    deps = [
        ":utils",
        "//src/lp_interface:lpi_factory",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "change_test",
    size = "small",
    srcs = ["change.cc"],
    deps = [
        ":utils",
        "//src/lp_interface:lpi_factory",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mip_data_test",
    size = "small",
    srcs = ["mip_data_test.cc"],
    deps = [
        ":utils",
        "//src/minimip:mip_data",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)
