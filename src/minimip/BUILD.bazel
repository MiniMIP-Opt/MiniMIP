# Building minimip libraries.
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

# All other packages in MiniMIP may use any of the testing utils.
package(default_visibility = ["//visibility:public"])

cc_library(
    name = "minimip_def",
    hdrs = ["minimip_def.h"],
    deps = [
        "//src/lp_interface:lp_types",
        "//src/messagehandler:message_handler",
        "//src/messagehandler:message_macros",
    ],
)

cc_library(
    name = "sparse_types",
    hdrs = ["sparse_types.h"],
    deps = [
        "@com_google_ortools//ortools/base",
    ],
)

cc_library(
    name = "problem",
    srcs = ["problem.cc"],
    hdrs = ["problem.h"],
    deps = [
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "mip_data",
    srcs = ["mip_data.cc"],
    hdrs = ["mip_data.h"],
    deps = [
        ":problem",
        "//src/lp_interface:strong_sparse_matrix",
    ],
)
